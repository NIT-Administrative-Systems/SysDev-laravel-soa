import{_ as a,o as e,c as n,e as s}from"./app-uDr87RQt.js";const t={},i=s(`<h1 id="northwestern-tools-for-laravel" tabindex="-1"><a class="header-anchor" href="#northwestern-tools-for-laravel"><span>Northwestern Tools for Laravel</span></a></h1><p>This package enhanced Laravel with easy access to popular Northwestern APIs &amp; webSSO/Duo multi-factor authentication.</p><table><thead><tr><th>Service</th><th>Prerequisites</th></tr></thead><tbody><tr><td>Agentless WebSSO</td><td>Apigee API key</td></tr><tr><td>Azure AD SSO</td><td>Registered Azure AD application</td></tr><tr><td>Directory Search</td><td>Data steward approval, Apigee API key</td></tr><tr><td>EventHub</td><td>Topics or queues, Apigee API key</td></tr></tbody></table><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>You can install the package via composer:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">composer</span> require northwestern-sysdev/laravel-soa
php artisan vendor:publish <span class="token parameter variable">--provider</span><span class="token operator">=</span><span class="token string">&quot;Northwestern\\SysDev\\SOA\\Providers\\NuSoaServiceProvider&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Laravel 6 &amp; 5.x</p><p>If you are on an older version of Laravel, the latest version of the package may not install. You can explicitly install v4, which is compatible:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">composer</span> require northwestern-sysdev/laravel-soa ^4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>And finally, add the options to your <code>.env</code> file (and don&#39;t forget to update <code>.env.example</code> for the rest of your team!) for the services you want to use:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># DirectorySearch</span>
<span class="token assign-left variable">DIRECTORY_SEARCH_API_KEY</span><span class="token operator">=</span>

<span class="token comment"># EventHub</span>
<span class="token assign-left variable">EVENT_HUB_BASE_URL</span><span class="token operator">=</span>https://northwestern-dev.apigee.net
<span class="token assign-left variable">EVENT_HUB_API_KEY</span><span class="token operator">=</span>
<span class="token assign-left variable">EVENT_HUB_EVENT_HUB_HMAC_VERIFICATION_SHARED_SECRET</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>The API objects should be injected by the Laravel service container. This ensures the configuration is injected into the objects for you:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Northwestern<span class="token punctuation">\\</span>SysDev<span class="token punctuation">\\</span>SOA<span class="token punctuation">\\</span>DirectorySearch</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyController</span> <span class="token keyword">extends</span> <span class="token class-name">Controllers</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$ds_api</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">DirectorySearch</span> <span class="token variable">$ds_api</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">ds_api</span> <span class="token operator">=</span> <span class="token variable">$ds_api</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you are ever in a spot where injection is unavailable, you can always call <code>resolve</code> yourself. This is particularly handy in the tinker console:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$pub</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Northwestern<span class="token punctuation">\\</span>SysDev<span class="token punctuation">\\</span>SOA<span class="token punctuation">\\</span>DirectorySearch</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For troubleshooting, each API has a <code>getLastError()</code> method. <code>dd()</code>ing the API object should give you everything you&#39;ll need, including the request body and URL.</p>`,15),o=[i];function l(r,p){return e(),n("div",null,o)}const d=a(t,[["render",l],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/","title":"Northwestern Tools for Laravel","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"git":{"updatedTime":1710792783000,"contributors":[{"name":"dependabot[bot]","email":"49699333+dependabot[bot]@users.noreply.github.com","commits":1}]},"filePathRelative":"index.md","excerpt":"\\n<p>This package enhanced Laravel with easy access to popular Northwestern APIs &amp; webSSO/Duo multi-factor authentication.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Service</th>\\n<th>Prerequisites</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Agentless WebSSO</td>\\n<td>Apigee API key</td>\\n</tr>\\n<tr>\\n<td>Azure AD SSO</td>\\n<td>Registered Azure AD application</td>\\n</tr>\\n<tr>\\n<td>Directory Search</td>\\n<td>Data steward approval, Apigee API key</td>\\n</tr>\\n<tr>\\n<td>EventHub</td>\\n<td>Topics or queues, Apigee API key</td>\\n</tr>\\n</tbody>\\n</table>"}');export{d as comp,u as data};
